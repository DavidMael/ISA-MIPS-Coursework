$date
	Mon Dec 14 20:42:38 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ALU_mult_tb $end
$scope module ALU_DUT $end
$var wire 32 ! a [31:0] $end
$var wire 32 " b [31:0] $end
$var wire 1 # clk $end
$var wire 4 $ ctrl [3:0] $end
$var reg 32 % amag [31:0] $end
$var reg 32 & bmag [31:0] $end
$var reg 2 ' comp [1:0] $end
$var reg 5 ( constto [4:0] $end
$var reg 32 ) hi [31:0] $end
$var reg 32 * lo [31:0] $end
$var reg 32 + out [31:0] $end
$var reg 32 , shi [31:0] $end
$var reg 32 - slo [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11111111111111110010000001011000 -
b11111111111111111111111111111111 ,
b11111111111111110010000001011000 +
b11111111111111110010000001011000 *
b11010010011 )
b11111 (
b10 '
b100010 &
b11010010100 %
b1010 $
0#
b11111111111111111111111111011110 "
b11010010100 !
$end
#1
b11010010011 +
b1011 $
1#
#2
0#
#3
b1100 +
b0 ,
b1100 -
b11 &
b100 %
b0 )
b1100 *
b1010 $
b11 "
b100 !
1#
#4
0#
#5
b0 +
b1011 $
1#
#6
0#
#7
b11111011101011010110010001111010 +
b11111011101011010110010001111010 -
b10 &
b1111101110101101011001000111101 %
b11111011101011010110010001111010 *
b1010 $
b10 "
b1111101110101101011001000111101 !
1#
#8
0#
#9
b0 +
b1011 $
1#
#10
0#
#11
b1100000101001110001010001001 +
b0 '
b111101110110110101111000011110 ,
b1100000101001110001010001001 -
b1111101110101101011001000111101 &
b111101110110110101111000011110 )
b1100000101001110001010001001 *
b1010 $
b1111101110101101011001000111101 "
1#
#12
0#
#13
b111101110110110101111000011110 +
b1011 $
1#
#14
0#
#15
b11111111111111110010000001011000 +
b10 '
b11111111111111111111111111111111 ,
b11111111111111110010000001011000 -
b100010 &
b11010010100 %
b11010010011 )
b11111111111111110010000001011000 *
b1000 $
b11111111111111111111111111011110 "
b11010010100 !
1#
#16
0#
#17
b11111111111111111111111111111111 +
b1001 $
1#
#18
0#
#19
b1100 +
b1 '
b0 ,
b1100 -
b11 &
b100 %
b11111111111111111111111111111001 )
b1100 *
b1000 $
b11111111111111111111111111111101 "
b11111111111111111111111111111100 !
1#
#20
0#
#21
b0 +
b1001 $
1#
#22
0#
#23
b11111111111111111110111101111110 +
b11111111111111111111111111111111 ,
b11111111111111111110111101111110 -
b10 &
b100001000001 %
b1 )
b11111111111111111110111101111110 *
b1000 $
b10 "
b11111111111111111111011110111111 !
1#
#24
0#
#25
b11111111111111111111111111111111 +
b1001 $
1#
#26
0#
#27
b10000010001010010100110111000011 +
b10000010001010010100110111000011 -
b1111101110101101011001000111101 &
b1 %
b1111101110101101011001000111100 )
b10000010001010010100110111000011 *
b1000 $
b1111101110101101011001000111101 "
b11111111111111111111111111111111 !
1#
#28
0#
#29
b11111111111111111111111111111111 +
b1001 $
1#
#30
0#
#31
1#
#32
0#
#33
1#
#34
0#
#35
1#
#36
0#
